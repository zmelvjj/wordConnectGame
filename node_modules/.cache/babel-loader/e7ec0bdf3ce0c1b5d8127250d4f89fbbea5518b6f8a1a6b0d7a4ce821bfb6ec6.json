{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from 'react';\nexport const findServerInNetwork = async () => {\n  _s();\n  const ipPart = window.location.hostname.split(\".\");\n\n  //---IP위치정보\n  // const ip = axios.get(\"https://freegeoip.app/json/\").then((data) => {return data.data.ip}).catch((err)=>console.log(\"애러:C  err\"))\n  // console.log(ip)\n\n  const [ip, setIp] = useState('');\n  useEffect(() => {\n    // IP 주소를 가져오는 API 호출\n    fetch('https://freegeoip.app/json/').then(response => response.json()).then(data => setIp(data.ip)) // IP 주소만 추출\n    .catch(error => console.error('Error fetching IP address:', error));\n  }, []);\n\n  //---IP추론\n  const ipTool = `http://${ipPart[0]}.${ipPart[1]}.${ipPart[2]}`;\n  console.log(ipPart);\n  for (let i = 1; i < 255; i++) {\n    const testIP = `${ipTool}.${i}:1234`;\n    axios.get(testIP + '/test').then(response => {\n      if (response.data === \"Find!\") {\n        console.log(`Find Server IP!`);\n\n        // fetch(testIP+'/test', {\n        //     method:\"POST\",\n        //     mode:\"cors\",\n        //     headers: { 'Content-Type': 'application/json' },\n        //     body: testIP\n        // }).then((res) => {})\n        //     .catch((err) => {})\n        return testIP; // 서버의 IP를 반환\n      }\n    }).catch(err => {});\n  }\n  console.log(\"Server not found.  :C\");\n  return null;\n};\n_s(findServerInNetwork, \"YpZ3SWQQmQ1wVzKrzfcDLp5BP+o=\");","map":{"version":3,"names":["axios","useEffect","useState","findServerInNetwork","_s","ipPart","window","location","hostname","split","ip","setIp","fetch","then","response","json","data","catch","error","console","ipTool","log","i","testIP","get","err"],"sources":["C:/Users/park0/Desktop/miniGamesProject/mgp-app/src/findServerIP.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport const findServerInNetwork = async () => {\r\n    const ipPart = window.location.hostname.split(\".\");\r\n\r\n    //---IP위치정보\r\n    // const ip = axios.get(\"https://freegeoip.app/json/\").then((data) => {return data.data.ip}).catch((err)=>console.log(\"애러:C  err\"))\r\n    // console.log(ip)\r\n\r\n    const [ip, setIp] = useState('');\r\n\r\n    useEffect(() => {\r\n        // IP 주소를 가져오는 API 호출\r\n        fetch('https://freegeoip.app/json/')\r\n        .then(response => response.json())\r\n        .then(data => setIp(data.ip)) // IP 주소만 추출\r\n        .catch(error => console.error('Error fetching IP address:', error));\r\n    }, []);\r\n\r\n    //---IP추론\r\n    const ipTool = `http://${ipPart[0]}.${ipPart[1]}.${ipPart[2]}`;\r\n    \r\n    console.log(ipPart)\r\n    for(let i = 1; i < 255; i++){\r\n        const testIP = `${ipTool}.${i}:1234`;\r\n\r\n        axios.get(testIP+'/test').then((response) => {\r\n            if (response.data === \"Find!\") {\r\n                console.log(`Find Server IP!`);\r\n\r\n                // fetch(testIP+'/test', {\r\n                //     method:\"POST\",\r\n                //     mode:\"cors\",\r\n                //     headers: { 'Content-Type': 'application/json' },\r\n                //     body: testIP\r\n                // }).then((res) => {})\r\n                //     .catch((err) => {})\r\n                return testIP; // 서버의 IP를 반환\r\n            }\r\n        }).catch((err) => {\r\n            \r\n        })\r\n    }\r\n    console.log(\"Server not found.  :C\")\r\n    return null;\r\n} "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAgBC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAAAC,EAAA;EAC3C,MAAMC,MAAM,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;;EAElD;EACA;EACA;;EAEA,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACZ;IACAW,KAAK,CAAC,6BAA6B,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,KAAK,CAACK,IAAI,CAACN,EAAE,CAAC,CAAC,CAAC;IAAA,CAC7BO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,MAAM,GAAG,UAAUf,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,EAAE;EAE9Dc,OAAO,CAACE,GAAG,CAAChB,MAAM,CAAC;EACnB,KAAI,IAAIiB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAC;IACxB,MAAMC,MAAM,GAAG,GAAGH,MAAM,IAAIE,CAAC,OAAO;IAEpCtB,KAAK,CAACwB,GAAG,CAACD,MAAM,GAAC,OAAO,CAAC,CAACV,IAAI,CAAEC,QAAQ,IAAK;MACzC,IAAIA,QAAQ,CAACE,IAAI,KAAK,OAAO,EAAE;QAC3BG,OAAO,CAACE,GAAG,CAAC,iBAAiB,CAAC;;QAE9B;QACA;QACA;QACA;QACA;QACA;QACA;QACA,OAAOE,MAAM,CAAC,CAAC;MACnB;IACJ,CAAC,CAAC,CAACN,KAAK,CAAEQ,GAAG,IAAK,CAElB,CAAC,CAAC;EACN;EACAN,OAAO,CAACE,GAAG,CAAC,uBAAuB,CAAC;EACpC,OAAO,IAAI;AACf,CAAC;AAAAjB,EAAA,CA3CYD,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}