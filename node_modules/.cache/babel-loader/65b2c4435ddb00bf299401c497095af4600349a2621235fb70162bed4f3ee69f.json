{"ast":null,"code":"var types = require('./types');\nvar rcodes = require('./rcodes');\nvar opcodes = require('./opcodes');\nvar ip = require('ip');\nvar Buffer = require('safe-buffer').Buffer;\nvar QUERY_FLAG = 0;\nvar RESPONSE_FLAG = 1 << 15;\nvar FLUSH_MASK = 1 << 15;\nvar NOT_FLUSH_MASK = ~FLUSH_MASK;\nvar QU_MASK = 1 << 15;\nvar NOT_QU_MASK = ~QU_MASK;\nvar name = exports.txt = exports.name = {};\nname.encode = function (str, buf, offset) {\n  if (!buf) buf = Buffer.alloc(name.encodingLength(str));\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n\n  // strip leading and trailing .\n  var n = str.replace(/^\\.|\\.$/gm, '');\n  if (n.length) {\n    var list = n.split('.');\n    for (var i = 0; i < list.length; i++) {\n      var len = buf.write(list[i], offset + 1);\n      buf[offset] = len;\n      offset += len + 1;\n    }\n  }\n  buf[offset++] = 0;\n  name.encode.bytes = offset - oldOffset;\n  return buf;\n};\nname.encode.bytes = 0;\nname.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var list = [];\n  var oldOffset = offset;\n  var len = buf[offset++];\n  if (len === 0) {\n    name.decode.bytes = 1;\n    return '.';\n  }\n  if (len >= 0xc0) {\n    var res = name.decode(buf, buf.readUInt16BE(offset - 1) - 0xc000);\n    name.decode.bytes = 2;\n    return res;\n  }\n  while (len) {\n    if (len >= 0xc0) {\n      list.push(name.decode(buf, buf.readUInt16BE(offset - 1) - 0xc000));\n      offset++;\n      break;\n    }\n    list.push(buf.toString('utf-8', offset, offset + len));\n    offset += len;\n    len = buf[offset++];\n  }\n  name.decode.bytes = offset - oldOffset;\n  return list.join('.');\n};\nname.decode.bytes = 0;\nname.encodingLength = function (n) {\n  if (n === '.' || n === '..') return 1;\n  return Buffer.byteLength(n.replace(/^\\.|\\.$/gm, '')) + 2;\n};\nvar string = {};\nstring.encode = function (s, buf, offset) {\n  if (!buf) buf = Buffer.alloc(string.encodingLength(s));\n  if (!offset) offset = 0;\n  var len = buf.write(s, offset + 1);\n  buf[offset] = len;\n  string.encode.bytes = len + 1;\n  return buf;\n};\nstring.encode.bytes = 0;\nstring.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var len = buf[offset];\n  var s = buf.toString('utf-8', offset + 1, offset + 1 + len);\n  string.decode.bytes = len + 1;\n  return s;\n};\nstring.decode.bytes = 0;\nstring.encodingLength = function (s) {\n  return Buffer.byteLength(s) + 1;\n};\nvar header = {};\nheader.encode = function (h, buf, offset) {\n  if (!buf) buf = header.encodingLength(h);\n  if (!offset) offset = 0;\n  var flags = (h.flags || 0) & 32767;\n  var type = h.type === 'response' ? RESPONSE_FLAG : QUERY_FLAG;\n  buf.writeUInt16BE(h.id || 0, offset);\n  buf.writeUInt16BE(flags | type, offset + 2);\n  buf.writeUInt16BE(h.questions.length, offset + 4);\n  buf.writeUInt16BE(h.answers.length, offset + 6);\n  buf.writeUInt16BE(h.authorities.length, offset + 8);\n  buf.writeUInt16BE(h.additionals.length, offset + 10);\n  return buf;\n};\nheader.encode.bytes = 12;\nheader.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  if (buf.length < 12) throw new Error('Header must be 12 bytes');\n  var flags = buf.readUInt16BE(offset + 2);\n  return {\n    id: buf.readUInt16BE(offset),\n    type: flags & RESPONSE_FLAG ? 'response' : 'query',\n    flags: flags & 32767,\n    flag_qr: (flags >> 15 & 0x1) === 1,\n    opcode: opcodes.toString(flags >> 11 & 0xf),\n    flag_auth: (flags >> 10 & 0x1) === 1,\n    flag_trunc: (flags >> 9 & 0x1) === 1,\n    flag_rd: (flags >> 8 & 0x1) === 1,\n    flag_ra: (flags >> 7 & 0x1) === 1,\n    flag_z: (flags >> 6 & 0x1) === 1,\n    flag_ad: (flags >> 5 & 0x1) === 1,\n    flag_cd: (flags >> 4 & 0x1) === 1,\n    rcode: rcodes.toString(flags & 0xf),\n    questions: new Array(buf.readUInt16BE(offset + 4)),\n    answers: new Array(buf.readUInt16BE(offset + 6)),\n    authorities: new Array(buf.readUInt16BE(offset + 8)),\n    additionals: new Array(buf.readUInt16BE(offset + 10))\n  };\n};\nheader.decode.bytes = 12;\nheader.encodingLength = function () {\n  return 12;\n};\nvar runknown = exports.unknown = {};\nrunknown.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(runknown.encodingLength(data));\n  if (!offset) offset = 0;\n  buf.writeUInt16BE(data.length, offset);\n  data.copy(buf, offset + 2);\n  runknown.encode.bytes = data.length + 2;\n  return buf;\n};\nrunknown.encode.bytes = 0;\nrunknown.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var len = buf.readUInt16BE(offset);\n  var data = buf.slice(offset + 2, offset + 2 + len);\n  runknown.decode.bytes = len + 2;\n  return data;\n};\nrunknown.decode.bytes = 0;\nrunknown.encodingLength = function (data) {\n  return data.length + 2;\n};\nvar rns = exports.ns = {};\nrns.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rns.encodingLength(data));\n  if (!offset) offset = 0;\n  name.encode(data, buf, offset + 2);\n  buf.writeUInt16BE(name.encode.bytes, offset);\n  rns.encode.bytes = name.encode.bytes + 2;\n  return buf;\n};\nrns.encode.bytes = 0;\nrns.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var len = buf.readUInt16BE(offset);\n  var dd = name.decode(buf, offset + 2);\n  rns.decode.bytes = len + 2;\n  return dd;\n};\nrns.decode.bytes = 0;\nrns.encodingLength = function (data) {\n  return name.encodingLength(data) + 2;\n};\nvar rsoa = exports.soa = {};\nrsoa.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rsoa.encodingLength(data));\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  offset += 2;\n  name.encode(data.mname, buf, offset);\n  offset += name.encode.bytes;\n  name.encode(data.rname, buf, offset);\n  offset += name.encode.bytes;\n  buf.writeUInt32BE(data.serial || 0, offset);\n  offset += 4;\n  buf.writeUInt32BE(data.refresh || 0, offset);\n  offset += 4;\n  buf.writeUInt32BE(data.retry || 0, offset);\n  offset += 4;\n  buf.writeUInt32BE(data.expire || 0, offset);\n  offset += 4;\n  buf.writeUInt32BE(data.minimum || 0, offset);\n  offset += 4;\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset);\n  rsoa.encode.bytes = offset - oldOffset;\n  return buf;\n};\nrsoa.encode.bytes = 0;\nrsoa.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  var data = {};\n  offset += 2;\n  data.mname = name.decode(buf, offset);\n  offset += name.decode.bytes;\n  data.rname = name.decode(buf, offset);\n  offset += name.decode.bytes;\n  data.serial = buf.readUInt32BE(offset);\n  offset += 4;\n  data.refresh = buf.readUInt32BE(offset);\n  offset += 4;\n  data.retry = buf.readUInt32BE(offset);\n  offset += 4;\n  data.expire = buf.readUInt32BE(offset);\n  offset += 4;\n  data.minimum = buf.readUInt32BE(offset);\n  offset += 4;\n  rsoa.decode.bytes = offset - oldOffset;\n  return data;\n};\nrsoa.decode.bytes = 0;\nrsoa.encodingLength = function (data) {\n  return 22 + name.encodingLength(data.mname) + name.encodingLength(data.rname);\n};\nvar rtxt = exports.txt = exports.null = {};\nvar rnull = rtxt;\nrtxt.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rtxt.encodingLength(data));\n  if (!offset) offset = 0;\n  if (typeof data === 'string') data = Buffer.from(data);\n  if (!data) data = Buffer.alloc(0);\n  var oldOffset = offset;\n  offset += 2;\n  var len = data.length;\n  data.copy(buf, offset, 0, len);\n  offset += len;\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset);\n  rtxt.encode.bytes = offset - oldOffset;\n  return buf;\n};\nrtxt.encode.bytes = 0;\nrtxt.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  var len = buf.readUInt16BE(offset);\n  offset += 2;\n  var data = buf.slice(offset, offset + len);\n  offset += len;\n  rtxt.decode.bytes = offset - oldOffset;\n  return data;\n};\nrtxt.decode.bytes = 0;\nrtxt.encodingLength = function (data) {\n  if (!data) return 2;\n  return (Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)) + 2;\n};\nvar rhinfo = exports.hinfo = {};\nrhinfo.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rhinfo.encodingLength(data));\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  offset += 2;\n  string.encode(data.cpu, buf, offset);\n  offset += string.encode.bytes;\n  string.encode(data.os, buf, offset);\n  offset += string.encode.bytes;\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset);\n  rhinfo.encode.bytes = offset - oldOffset;\n  return buf;\n};\nrhinfo.encode.bytes = 0;\nrhinfo.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  var data = {};\n  offset += 2;\n  data.cpu = string.decode(buf, offset);\n  offset += string.decode.bytes;\n  data.os = string.decode(buf, offset);\n  offset += string.decode.bytes;\n  rhinfo.decode.bytes = offset - oldOffset;\n  return data;\n};\nrhinfo.decode.bytes = 0;\nrhinfo.encodingLength = function (data) {\n  return string.encodingLength(data.cpu) + string.encodingLength(data.os) + 2;\n};\nvar rptr = exports.ptr = {};\nvar rcname = exports.cname = rptr;\nvar rdname = exports.dname = rptr;\nrptr.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rptr.encodingLength(data));\n  if (!offset) offset = 0;\n  name.encode(data, buf, offset + 2);\n  buf.writeUInt16BE(name.encode.bytes, offset);\n  rptr.encode.bytes = name.encode.bytes + 2;\n  return buf;\n};\nrptr.encode.bytes = 0;\nrptr.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var data = name.decode(buf, offset + 2);\n  rptr.decode.bytes = name.decode.bytes + 2;\n  return data;\n};\nrptr.decode.bytes = 0;\nrptr.encodingLength = function (data) {\n  return name.encodingLength(data) + 2;\n};\nvar rsrv = exports.srv = {};\nrsrv.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rsrv.encodingLength(data));\n  if (!offset) offset = 0;\n  buf.writeUInt16BE(data.priority || 0, offset + 2);\n  buf.writeUInt16BE(data.weight || 0, offset + 4);\n  buf.writeUInt16BE(data.port || 0, offset + 6);\n  name.encode(data.target, buf, offset + 8);\n  var len = name.encode.bytes + 6;\n  buf.writeUInt16BE(len, offset);\n  rsrv.encode.bytes = len + 2;\n  return buf;\n};\nrsrv.encode.bytes = 0;\nrsrv.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var len = buf.readUInt16BE(offset);\n  var data = {};\n  data.priority = buf.readUInt16BE(offset + 2);\n  data.weight = buf.readUInt16BE(offset + 4);\n  data.port = buf.readUInt16BE(offset + 6);\n  data.target = name.decode(buf, offset + 8);\n  rsrv.decode.bytes = len + 2;\n  return data;\n};\nrsrv.decode.bytes = 0;\nrsrv.encodingLength = function (data) {\n  return 8 + name.encodingLength(data.target);\n};\nvar rcaa = exports.caa = {};\nrcaa.ISSUER_CRITICAL = 1 << 7;\nrcaa.encode = function (data, buf, offset) {\n  var len = rcaa.encodingLength(data);\n  if (!buf) buf = Buffer.alloc(rcaa.encodingLength(data));\n  if (!offset) offset = 0;\n  if (data.issuerCritical) {\n    data.flags = rcaa.ISSUER_CRITICAL;\n  }\n  buf.writeUInt16BE(len - 2, offset);\n  offset += 2;\n  buf.writeUInt8(data.flags || 0, offset);\n  offset += 1;\n  string.encode(data.tag, buf, offset);\n  offset += string.encode.bytes;\n  buf.write(data.value, offset);\n  offset += Buffer.byteLength(data.value);\n  rcaa.encode.bytes = len;\n  return buf;\n};\nrcaa.encode.bytes = 0;\nrcaa.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var len = buf.readUInt16BE(offset);\n  offset += 2;\n  var oldOffset = offset;\n  var data = {};\n  data.flags = buf.readUInt8(offset);\n  offset += 1;\n  data.tag = string.decode(buf, offset);\n  offset += string.decode.bytes;\n  data.value = buf.toString('utf-8', offset, oldOffset + len);\n  data.issuerCritical = !!(data.flags & rcaa.ISSUER_CRITICAL);\n  rcaa.decode.bytes = len + 2;\n  return data;\n};\nrcaa.decode.bytes = 0;\nrcaa.encodingLength = function (data) {\n  return string.encodingLength(data.tag) + string.encodingLength(data.value) + 2;\n};\nvar ra = exports.a = {};\nra.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.alloc(ra.encodingLength(host));\n  if (!offset) offset = 0;\n  buf.writeUInt16BE(4, offset);\n  offset += 2;\n  ip.toBuffer(host, buf, offset);\n  ra.encode.bytes = 6;\n  return buf;\n};\nra.encode.bytes = 0;\nra.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  offset += 2;\n  var host = ip.toString(buf, offset, 4);\n  ra.decode.bytes = 6;\n  return host;\n};\nra.decode.bytes = 0;\nra.encodingLength = function () {\n  return 6;\n};\nvar raaaa = exports.aaaa = {};\nraaaa.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.alloc(raaaa.encodingLength(host));\n  if (!offset) offset = 0;\n  buf.writeUInt16BE(16, offset);\n  offset += 2;\n  ip.toBuffer(host, buf, offset);\n  raaaa.encode.bytes = 18;\n  return buf;\n};\nraaaa.encode.bytes = 0;\nraaaa.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  offset += 2;\n  var host = ip.toString(buf, offset, 16);\n  raaaa.decode.bytes = 18;\n  return host;\n};\nraaaa.decode.bytes = 0;\nraaaa.encodingLength = function () {\n  return 18;\n};\nvar renc = exports.record = function (type) {\n  switch (type.toUpperCase()) {\n    case 'A':\n      return ra;\n    case 'PTR':\n      return rptr;\n    case 'CNAME':\n      return rcname;\n    case 'DNAME':\n      return rdname;\n    case 'TXT':\n      return rtxt;\n    case 'NULL':\n      return rnull;\n    case 'AAAA':\n      return raaaa;\n    case 'SRV':\n      return rsrv;\n    case 'HINFO':\n      return rhinfo;\n    case 'CAA':\n      return rcaa;\n    case 'NS':\n      return rns;\n    case 'SOA':\n      return rsoa;\n  }\n  return runknown;\n};\nvar answer = exports.answer = {};\nanswer.encode = function (a, buf, offset) {\n  if (!buf) buf = Buffer.alloc(answer.encodingLength(a));\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  name.encode(a.name, buf, offset);\n  offset += name.encode.bytes;\n  buf.writeUInt16BE(types.toType(a.type), offset);\n  var klass = a.class === undefined ? 1 : a.class;\n  if (a.flush) klass |= FLUSH_MASK; // the 1st bit of the class is the flush bit\n  buf.writeUInt16BE(klass, offset + 2);\n  buf.writeUInt32BE(a.ttl || 0, offset + 4);\n  var enc = renc(a.type);\n  enc.encode(a.data, buf, offset + 8);\n  offset += 8 + enc.encode.bytes;\n  answer.encode.bytes = offset - oldOffset;\n  return buf;\n};\nanswer.encode.bytes = 0;\nanswer.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var a = {};\n  var oldOffset = offset;\n  a.name = name.decode(buf, offset);\n  offset += name.decode.bytes;\n  a.type = types.toString(buf.readUInt16BE(offset));\n  a.class = buf.readUInt16BE(offset + 2);\n  a.ttl = buf.readUInt32BE(offset + 4);\n  a.flush = !!(a.class & FLUSH_MASK);\n  if (a.flush) a.class &= NOT_FLUSH_MASK;\n  var enc = renc(a.type);\n  a.data = enc.decode(buf, offset + 8);\n  offset += 8 + enc.decode.bytes;\n  answer.decode.bytes = offset - oldOffset;\n  return a;\n};\nanswer.decode.bytes = 0;\nanswer.encodingLength = function (a) {\n  return name.encodingLength(a.name) + 8 + renc(a.type).encodingLength(a.data);\n};\nvar question = exports.question = {};\nquestion.encode = function (q, buf, offset) {\n  if (!buf) buf = Buffer.alloc(question.encodingLength(q));\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  name.encode(q.name, buf, offset);\n  offset += name.encode.bytes;\n  buf.writeUInt16BE(types.toType(q.type), offset);\n  offset += 2;\n  buf.writeUInt16BE(q.class === undefined ? 1 : q.class, offset);\n  offset += 2;\n  question.encode.bytes = offset - oldOffset;\n  return q;\n};\nquestion.encode.bytes = 0;\nquestion.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  var q = {};\n  q.name = name.decode(buf, offset);\n  offset += name.decode.bytes;\n  q.type = types.toString(buf.readUInt16BE(offset));\n  offset += 2;\n  q.class = buf.readUInt16BE(offset);\n  offset += 2;\n  var qu = !!(q.class & QU_MASK);\n  if (qu) q.class &= NOT_QU_MASK;\n  question.decode.bytes = offset - oldOffset;\n  return q;\n};\nquestion.decode.bytes = 0;\nquestion.encodingLength = function (q) {\n  return name.encodingLength(q.name) + 4;\n};\nexports.AUTHORITATIVE_ANSWER = 1 << 10;\nexports.TRUNCATED_RESPONSE = 1 << 9;\nexports.RECURSION_DESIRED = 1 << 8;\nexports.RECURSION_AVAILABLE = 1 << 7;\nexports.AUTHENTIC_DATA = 1 << 5;\nexports.CHECKING_DISABLED = 1 << 4;\nexports.encode = function (result, buf, offset) {\n  var allocing = !buf;\n  if (allocing) buf = Buffer.alloc(exports.encodingLength(result));\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  if (!result.questions) result.questions = [];\n  if (!result.answers) result.answers = [];\n  if (!result.authorities) result.authorities = [];\n  if (!result.additionals) result.additionals = [];\n  header.encode(result, buf, offset);\n  offset += header.encode.bytes;\n  offset = encodeList(result.questions, question, buf, offset);\n  offset = encodeList(result.answers, answer, buf, offset);\n  offset = encodeList(result.authorities, answer, buf, offset);\n  offset = encodeList(result.additionals, answer, buf, offset);\n  exports.encode.bytes = offset - oldOffset;\n\n  // just a quick sanity check\n  if (allocing && exports.encode.bytes !== buf.length) {\n    return buf.slice(0, exports.encode.bytes);\n  }\n  return buf;\n};\nexports.encode.bytes = 0;\nexports.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  var result = header.decode(buf, offset);\n  offset += header.decode.bytes;\n  offset = decodeList(result.questions, question, buf, offset);\n  offset = decodeList(result.answers, answer, buf, offset);\n  offset = decodeList(result.authorities, answer, buf, offset);\n  offset = decodeList(result.additionals, answer, buf, offset);\n  exports.decode.bytes = offset - oldOffset;\n  return result;\n};\nexports.decode.bytes = 0;\nexports.encodingLength = function (result) {\n  return header.encodingLength(result) + encodingLengthList(result.questions || [], question) + encodingLengthList(result.answers || [], answer) + encodingLengthList(result.authorities || [], answer) + encodingLengthList(result.additionals || [], answer);\n};\nfunction encodingLengthList(list, enc) {\n  var len = 0;\n  for (var i = 0; i < list.length; i++) len += enc.encodingLength(list[i]);\n  return len;\n}\nfunction encodeList(list, enc, buf, offset) {\n  for (var i = 0; i < list.length; i++) {\n    enc.encode(list[i], buf, offset);\n    offset += enc.encode.bytes;\n  }\n  return offset;\n}\nfunction decodeList(list, enc, buf, offset) {\n  for (var i = 0; i < list.length; i++) {\n    list[i] = enc.decode(buf, offset);\n    offset += enc.decode.bytes;\n  }\n  return offset;\n}","map":{"version":3,"names":["types","require","rcodes","opcodes","ip","Buffer","QUERY_FLAG","RESPONSE_FLAG","FLUSH_MASK","NOT_FLUSH_MASK","QU_MASK","NOT_QU_MASK","name","exports","txt","encode","str","buf","offset","alloc","encodingLength","oldOffset","n","replace","length","list","split","i","len","write","bytes","decode","res","readUInt16BE","push","toString","join","byteLength","string","s","header","h","flags","type","writeUInt16BE","id","questions","answers","authorities","additionals","Error","flag_qr","opcode","flag_auth","flag_trunc","flag_rd","flag_ra","flag_z","flag_ad","flag_cd","rcode","Array","runknown","unknown","data","copy","slice","rns","ns","dd","rsoa","soa","mname","rname","writeUInt32BE","serial","refresh","retry","expire","minimum","readUInt32BE","rtxt","null","rnull","from","isBuffer","rhinfo","hinfo","cpu","os","rptr","ptr","rcname","cname","rdname","dname","rsrv","srv","priority","weight","port","target","rcaa","caa","ISSUER_CRITICAL","issuerCritical","writeUInt8","tag","value","readUInt8","ra","a","host","toBuffer","raaaa","aaaa","renc","record","toUpperCase","answer","toType","klass","class","undefined","flush","ttl","enc","question","q","qu","AUTHORITATIVE_ANSWER","TRUNCATED_RESPONSE","RECURSION_DESIRED","RECURSION_AVAILABLE","AUTHENTIC_DATA","CHECKING_DISABLED","result","allocing","encodeList","decodeList","encodingLengthList"],"sources":["C:/Users/park0/Desktop/miniGamesProject/mgp-app/node_modules/bonjour/node_modules/dns-packet/index.js"],"sourcesContent":["var types = require('./types')\nvar rcodes = require('./rcodes')\nvar opcodes = require('./opcodes')\nvar ip = require('ip')\nvar Buffer = require('safe-buffer').Buffer\n\nvar QUERY_FLAG = 0\nvar RESPONSE_FLAG = 1 << 15\nvar FLUSH_MASK = 1 << 15\nvar NOT_FLUSH_MASK = ~FLUSH_MASK\nvar QU_MASK = 1 << 15\nvar NOT_QU_MASK = ~QU_MASK\n\nvar name = exports.txt = exports.name = {}\n\nname.encode = function (str, buf, offset) {\n  if (!buf) buf = Buffer.alloc(name.encodingLength(str))\n  if (!offset) offset = 0\n  var oldOffset = offset\n\n  // strip leading and trailing .\n  var n = str.replace(/^\\.|\\.$/gm, '')\n  if (n.length) {\n    var list = n.split('.')\n\n    for (var i = 0; i < list.length; i++) {\n      var len = buf.write(list[i], offset + 1)\n      buf[offset] = len\n      offset += len + 1\n    }\n  }\n\n  buf[offset++] = 0\n\n  name.encode.bytes = offset - oldOffset\n  return buf\n}\n\nname.encode.bytes = 0\n\nname.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var list = []\n  var oldOffset = offset\n  var len = buf[offset++]\n\n  if (len === 0) {\n    name.decode.bytes = 1\n    return '.'\n  }\n  if (len >= 0xc0) {\n    var res = name.decode(buf, buf.readUInt16BE(offset - 1) - 0xc000)\n    name.decode.bytes = 2\n    return res\n  }\n\n  while (len) {\n    if (len >= 0xc0) {\n      list.push(name.decode(buf, buf.readUInt16BE(offset - 1) - 0xc000))\n      offset++\n      break\n    }\n\n    list.push(buf.toString('utf-8', offset, offset + len))\n    offset += len\n    len = buf[offset++]\n  }\n\n  name.decode.bytes = offset - oldOffset\n  return list.join('.')\n}\n\nname.decode.bytes = 0\n\nname.encodingLength = function (n) {\n  if (n === '.' || n === '..') return 1\n  return Buffer.byteLength(n.replace(/^\\.|\\.$/gm, '')) + 2\n}\n\nvar string = {}\n\nstring.encode = function (s, buf, offset) {\n  if (!buf) buf = Buffer.alloc(string.encodingLength(s))\n  if (!offset) offset = 0\n\n  var len = buf.write(s, offset + 1)\n  buf[offset] = len\n  string.encode.bytes = len + 1\n  return buf\n}\n\nstring.encode.bytes = 0\n\nstring.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf[offset]\n  var s = buf.toString('utf-8', offset + 1, offset + 1 + len)\n  string.decode.bytes = len + 1\n  return s\n}\n\nstring.decode.bytes = 0\n\nstring.encodingLength = function (s) {\n  return Buffer.byteLength(s) + 1\n}\n\nvar header = {}\n\nheader.encode = function (h, buf, offset) {\n  if (!buf) buf = header.encodingLength(h)\n  if (!offset) offset = 0\n\n  var flags = (h.flags || 0) & 32767\n  var type = h.type === 'response' ? RESPONSE_FLAG : QUERY_FLAG\n\n  buf.writeUInt16BE(h.id || 0, offset)\n  buf.writeUInt16BE(flags | type, offset + 2)\n  buf.writeUInt16BE(h.questions.length, offset + 4)\n  buf.writeUInt16BE(h.answers.length, offset + 6)\n  buf.writeUInt16BE(h.authorities.length, offset + 8)\n  buf.writeUInt16BE(h.additionals.length, offset + 10)\n\n  return buf\n}\n\nheader.encode.bytes = 12\n\nheader.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  if (buf.length < 12) throw new Error('Header must be 12 bytes')\n  var flags = buf.readUInt16BE(offset + 2)\n\n  return {\n    id: buf.readUInt16BE(offset),\n    type: flags & RESPONSE_FLAG ? 'response' : 'query',\n    flags: flags & 32767,\n    flag_qr: ((flags >> 15) & 0x1) === 1,\n    opcode: opcodes.toString((flags >> 11) & 0xf),\n    flag_auth: ((flags >> 10) & 0x1) === 1,\n    flag_trunc: ((flags >> 9) & 0x1) === 1,\n    flag_rd: ((flags >> 8) & 0x1) === 1,\n    flag_ra: ((flags >> 7) & 0x1) === 1,\n    flag_z: ((flags >> 6) & 0x1) === 1,\n    flag_ad: ((flags >> 5) & 0x1) === 1,\n    flag_cd: ((flags >> 4) & 0x1) === 1,\n    rcode: rcodes.toString(flags & 0xf),\n    questions: new Array(buf.readUInt16BE(offset + 4)),\n    answers: new Array(buf.readUInt16BE(offset + 6)),\n    authorities: new Array(buf.readUInt16BE(offset + 8)),\n    additionals: new Array(buf.readUInt16BE(offset + 10))\n  }\n}\n\nheader.decode.bytes = 12\n\nheader.encodingLength = function () {\n  return 12\n}\n\nvar runknown = exports.unknown = {}\n\nrunknown.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(runknown.encodingLength(data))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(data.length, offset)\n  data.copy(buf, offset + 2)\n\n  runknown.encode.bytes = data.length + 2\n  return buf\n}\n\nrunknown.encode.bytes = 0\n\nrunknown.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf.readUInt16BE(offset)\n  var data = buf.slice(offset + 2, offset + 2 + len)\n  runknown.decode.bytes = len + 2\n  return data\n}\n\nrunknown.decode.bytes = 0\n\nrunknown.encodingLength = function (data) {\n  return data.length + 2\n}\n\nvar rns = exports.ns = {}\n\nrns.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rns.encodingLength(data))\n  if (!offset) offset = 0\n\n  name.encode(data, buf, offset + 2)\n  buf.writeUInt16BE(name.encode.bytes, offset)\n  rns.encode.bytes = name.encode.bytes + 2\n  return buf\n}\n\nrns.encode.bytes = 0\n\nrns.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf.readUInt16BE(offset)\n  var dd = name.decode(buf, offset + 2)\n\n  rns.decode.bytes = len + 2\n  return dd\n}\n\nrns.decode.bytes = 0\n\nrns.encodingLength = function (data) {\n  return name.encodingLength(data) + 2\n}\n\nvar rsoa = exports.soa = {}\n\nrsoa.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rsoa.encodingLength(data))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n  offset += 2\n  name.encode(data.mname, buf, offset)\n  offset += name.encode.bytes\n  name.encode(data.rname, buf, offset)\n  offset += name.encode.bytes\n  buf.writeUInt32BE(data.serial || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.refresh || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.retry || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.expire || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.minimum || 0, offset)\n  offset += 4\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rsoa.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrsoa.encode.bytes = 0\n\nrsoa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  var data = {}\n  offset += 2\n  data.mname = name.decode(buf, offset)\n  offset += name.decode.bytes\n  data.rname = name.decode(buf, offset)\n  offset += name.decode.bytes\n  data.serial = buf.readUInt32BE(offset)\n  offset += 4\n  data.refresh = buf.readUInt32BE(offset)\n  offset += 4\n  data.retry = buf.readUInt32BE(offset)\n  offset += 4\n  data.expire = buf.readUInt32BE(offset)\n  offset += 4\n  data.minimum = buf.readUInt32BE(offset)\n  offset += 4\n\n  rsoa.decode.bytes = offset - oldOffset\n  return data\n}\n\nrsoa.decode.bytes = 0\n\nrsoa.encodingLength = function (data) {\n  return 22 + name.encodingLength(data.mname) + name.encodingLength(data.rname)\n}\n\nvar rtxt = exports.txt = exports.null = {}\nvar rnull = rtxt\n\nrtxt.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rtxt.encodingLength(data))\n  if (!offset) offset = 0\n\n  if (typeof data === 'string') data = Buffer.from(data)\n  if (!data) data = Buffer.alloc(0)\n\n  var oldOffset = offset\n  offset += 2\n\n  var len = data.length\n  data.copy(buf, offset, 0, len)\n  offset += len\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rtxt.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrtxt.encode.bytes = 0\n\nrtxt.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  var oldOffset = offset\n  var len = buf.readUInt16BE(offset)\n\n  offset += 2\n\n  var data = buf.slice(offset, offset + len)\n  offset += len\n\n  rtxt.decode.bytes = offset - oldOffset\n  return data\n}\n\nrtxt.decode.bytes = 0\n\nrtxt.encodingLength = function (data) {\n  if (!data) return 2\n  return (Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)) + 2\n}\n\nvar rhinfo = exports.hinfo = {}\n\nrhinfo.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rhinfo.encodingLength(data))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n  offset += 2\n  string.encode(data.cpu, buf, offset)\n  offset += string.encode.bytes\n  string.encode(data.os, buf, offset)\n  offset += string.encode.bytes\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rhinfo.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrhinfo.encode.bytes = 0\n\nrhinfo.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  var data = {}\n  offset += 2\n  data.cpu = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.os = string.decode(buf, offset)\n  offset += string.decode.bytes\n  rhinfo.decode.bytes = offset - oldOffset\n  return data\n}\n\nrhinfo.decode.bytes = 0\n\nrhinfo.encodingLength = function (data) {\n  return string.encodingLength(data.cpu) + string.encodingLength(data.os) + 2\n}\n\nvar rptr = exports.ptr = {}\nvar rcname = exports.cname = rptr\nvar rdname = exports.dname = rptr\n\nrptr.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rptr.encodingLength(data))\n  if (!offset) offset = 0\n\n  name.encode(data, buf, offset + 2)\n  buf.writeUInt16BE(name.encode.bytes, offset)\n  rptr.encode.bytes = name.encode.bytes + 2\n  return buf\n}\n\nrptr.encode.bytes = 0\n\nrptr.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var data = name.decode(buf, offset + 2)\n  rptr.decode.bytes = name.decode.bytes + 2\n  return data\n}\n\nrptr.decode.bytes = 0\n\nrptr.encodingLength = function (data) {\n  return name.encodingLength(data) + 2\n}\n\nvar rsrv = exports.srv = {}\n\nrsrv.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rsrv.encodingLength(data))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(data.priority || 0, offset + 2)\n  buf.writeUInt16BE(data.weight || 0, offset + 4)\n  buf.writeUInt16BE(data.port || 0, offset + 6)\n  name.encode(data.target, buf, offset + 8)\n\n  var len = name.encode.bytes + 6\n  buf.writeUInt16BE(len, offset)\n\n  rsrv.encode.bytes = len + 2\n  return buf\n}\n\nrsrv.encode.bytes = 0\n\nrsrv.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf.readUInt16BE(offset)\n\n  var data = {}\n  data.priority = buf.readUInt16BE(offset + 2)\n  data.weight = buf.readUInt16BE(offset + 4)\n  data.port = buf.readUInt16BE(offset + 6)\n  data.target = name.decode(buf, offset + 8)\n\n  rsrv.decode.bytes = len + 2\n  return data\n}\n\nrsrv.decode.bytes = 0\n\nrsrv.encodingLength = function (data) {\n  return 8 + name.encodingLength(data.target)\n}\n\nvar rcaa = exports.caa = {}\n\nrcaa.ISSUER_CRITICAL = 1 << 7\n\nrcaa.encode = function (data, buf, offset) {\n  var len = rcaa.encodingLength(data)\n\n  if (!buf) buf = Buffer.alloc(rcaa.encodingLength(data))\n  if (!offset) offset = 0\n\n  if (data.issuerCritical) {\n    data.flags = rcaa.ISSUER_CRITICAL\n  }\n\n  buf.writeUInt16BE(len - 2, offset)\n  offset += 2\n  buf.writeUInt8(data.flags || 0, offset)\n  offset += 1\n  string.encode(data.tag, buf, offset)\n  offset += string.encode.bytes\n  buf.write(data.value, offset)\n  offset += Buffer.byteLength(data.value)\n\n  rcaa.encode.bytes = len\n  return buf\n}\n\nrcaa.encode.bytes = 0\n\nrcaa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf.readUInt16BE(offset)\n  offset += 2\n\n  var oldOffset = offset\n  var data = {}\n  data.flags = buf.readUInt8(offset)\n  offset += 1\n  data.tag = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.value = buf.toString('utf-8', offset, oldOffset + len)\n\n  data.issuerCritical = !!(data.flags & rcaa.ISSUER_CRITICAL)\n\n  rcaa.decode.bytes = len + 2\n\n  return data\n}\n\nrcaa.decode.bytes = 0\n\nrcaa.encodingLength = function (data) {\n  return string.encodingLength(data.tag) + string.encodingLength(data.value) + 2\n}\n\nvar ra = exports.a = {}\n\nra.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.alloc(ra.encodingLength(host))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(4, offset)\n  offset += 2\n  ip.toBuffer(host, buf, offset)\n  ra.encode.bytes = 6\n  return buf\n}\n\nra.encode.bytes = 0\n\nra.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  offset += 2\n  var host = ip.toString(buf, offset, 4)\n  ra.decode.bytes = 6\n  return host\n}\n\nra.decode.bytes = 0\n\nra.encodingLength = function () {\n  return 6\n}\n\nvar raaaa = exports.aaaa = {}\n\nraaaa.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.alloc(raaaa.encodingLength(host))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(16, offset)\n  offset += 2\n  ip.toBuffer(host, buf, offset)\n  raaaa.encode.bytes = 18\n  return buf\n}\n\nraaaa.encode.bytes = 0\n\nraaaa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  offset += 2\n  var host = ip.toString(buf, offset, 16)\n  raaaa.decode.bytes = 18\n  return host\n}\n\nraaaa.decode.bytes = 0\n\nraaaa.encodingLength = function () {\n  return 18\n}\n\nvar renc = exports.record = function (type) {\n  switch (type.toUpperCase()) {\n    case 'A': return ra\n    case 'PTR': return rptr\n    case 'CNAME': return rcname\n    case 'DNAME': return rdname\n    case 'TXT': return rtxt\n    case 'NULL': return rnull\n    case 'AAAA': return raaaa\n    case 'SRV': return rsrv\n    case 'HINFO': return rhinfo\n    case 'CAA': return rcaa\n    case 'NS': return rns\n    case 'SOA': return rsoa\n  }\n  return runknown\n}\n\nvar answer = exports.answer = {}\n\nanswer.encode = function (a, buf, offset) {\n  if (!buf) buf = Buffer.alloc(answer.encodingLength(a))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  name.encode(a.name, buf, offset)\n  offset += name.encode.bytes\n\n  buf.writeUInt16BE(types.toType(a.type), offset)\n\n  var klass = a.class === undefined ? 1 : a.class\n  if (a.flush) klass |= FLUSH_MASK // the 1st bit of the class is the flush bit\n  buf.writeUInt16BE(klass, offset + 2)\n\n  buf.writeUInt32BE(a.ttl || 0, offset + 4)\n\n  var enc = renc(a.type)\n  enc.encode(a.data, buf, offset + 8)\n  offset += 8 + enc.encode.bytes\n\n  answer.encode.bytes = offset - oldOffset\n  return buf\n}\n\nanswer.encode.bytes = 0\n\nanswer.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var a = {}\n  var oldOffset = offset\n\n  a.name = name.decode(buf, offset)\n  offset += name.decode.bytes\n  a.type = types.toString(buf.readUInt16BE(offset))\n  a.class = buf.readUInt16BE(offset + 2)\n  a.ttl = buf.readUInt32BE(offset + 4)\n\n  a.flush = !!(a.class & FLUSH_MASK)\n  if (a.flush) a.class &= NOT_FLUSH_MASK\n\n  var enc = renc(a.type)\n  a.data = enc.decode(buf, offset + 8)\n  offset += 8 + enc.decode.bytes\n\n  answer.decode.bytes = offset - oldOffset\n  return a\n}\n\nanswer.decode.bytes = 0\n\nanswer.encodingLength = function (a) {\n  return name.encodingLength(a.name) + 8 + renc(a.type).encodingLength(a.data)\n}\n\nvar question = exports.question = {}\n\nquestion.encode = function (q, buf, offset) {\n  if (!buf) buf = Buffer.alloc(question.encodingLength(q))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  name.encode(q.name, buf, offset)\n  offset += name.encode.bytes\n\n  buf.writeUInt16BE(types.toType(q.type), offset)\n  offset += 2\n\n  buf.writeUInt16BE(q.class === undefined ? 1 : q.class, offset)\n  offset += 2\n\n  question.encode.bytes = offset - oldOffset\n  return q\n}\n\nquestion.encode.bytes = 0\n\nquestion.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n  var q = {}\n\n  q.name = name.decode(buf, offset)\n  offset += name.decode.bytes\n\n  q.type = types.toString(buf.readUInt16BE(offset))\n  offset += 2\n\n  q.class = buf.readUInt16BE(offset)\n  offset += 2\n\n  var qu = !!(q.class & QU_MASK)\n  if (qu) q.class &= NOT_QU_MASK\n\n  question.decode.bytes = offset - oldOffset\n  return q\n}\n\nquestion.decode.bytes = 0\n\nquestion.encodingLength = function (q) {\n  return name.encodingLength(q.name) + 4\n}\n\nexports.AUTHORITATIVE_ANSWER = 1 << 10\nexports.TRUNCATED_RESPONSE = 1 << 9\nexports.RECURSION_DESIRED = 1 << 8\nexports.RECURSION_AVAILABLE = 1 << 7\nexports.AUTHENTIC_DATA = 1 << 5\nexports.CHECKING_DISABLED = 1 << 4\n\nexports.encode = function (result, buf, offset) {\n  var allocing = !buf\n  if (allocing) buf = Buffer.alloc(exports.encodingLength(result))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  if (!result.questions) result.questions = []\n  if (!result.answers) result.answers = []\n  if (!result.authorities) result.authorities = []\n  if (!result.additionals) result.additionals = []\n\n  header.encode(result, buf, offset)\n  offset += header.encode.bytes\n\n  offset = encodeList(result.questions, question, buf, offset)\n  offset = encodeList(result.answers, answer, buf, offset)\n  offset = encodeList(result.authorities, answer, buf, offset)\n  offset = encodeList(result.additionals, answer, buf, offset)\n\n  exports.encode.bytes = offset - oldOffset\n\n  // just a quick sanity check\n  if (allocing && exports.encode.bytes !== buf.length) {\n    return buf.slice(0, exports.encode.bytes)\n  }\n\n  return buf\n}\n\nexports.encode.bytes = 0\n\nexports.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n  var result = header.decode(buf, offset)\n  offset += header.decode.bytes\n\n  offset = decodeList(result.questions, question, buf, offset)\n  offset = decodeList(result.answers, answer, buf, offset)\n  offset = decodeList(result.authorities, answer, buf, offset)\n  offset = decodeList(result.additionals, answer, buf, offset)\n\n  exports.decode.bytes = offset - oldOffset\n\n  return result\n}\n\nexports.decode.bytes = 0\n\nexports.encodingLength = function (result) {\n  return header.encodingLength(result) +\n    encodingLengthList(result.questions || [], question) +\n    encodingLengthList(result.answers || [], answer) +\n    encodingLengthList(result.authorities || [], answer) +\n    encodingLengthList(result.additionals || [], answer)\n}\n\nfunction encodingLengthList (list, enc) {\n  var len = 0\n  for (var i = 0; i < list.length; i++) len += enc.encodingLength(list[i])\n  return len\n}\n\nfunction encodeList (list, enc, buf, offset) {\n  for (var i = 0; i < list.length; i++) {\n    enc.encode(list[i], buf, offset)\n    offset += enc.encode.bytes\n  }\n  return offset\n}\n\nfunction decodeList (list, enc, buf, offset) {\n  for (var i = 0; i < list.length; i++) {\n    list[i] = enc.decode(buf, offset)\n    offset += enc.decode.bytes\n  }\n  return offset\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}