{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\park0\\\\Desktop\\\\miniGamesProject\\\\react-app\\\\mgp-app\\\\src\\\\App.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [Username, setUsername] = useState('');\n  const [Password, setPassword] = useState('');\n  const [Response, setResponse] = useState(null);\n  const [errorMassege, serErrorMassege] = useState(['', \"red\"]);\n  let massege = \"< 로그인 >\";\n  const data = {\n    Username,\n    Password\n  };\n  const login = async e => {\n    _s();\n    e.preventDefault();\n    try {\n      const res = await fetch('http://localhost:1234/Login', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await res.json();\n      if (result === \"NotUserData\") {\n        serErrorMassege([\"이름 또는 비밀번호가 잘못되었습니다.\", \"red\"]);\n      } else {\n        const navigate = useNavigate();\n        navigate('/about');\n        serErrorMassege(['', \"red\"]);\n      }\n      setResponse(result);\n    } catch (error) {\n      console.error('ERROR:', error);\n    }\n  };\n  _s(login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  const signUp = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch(\"http://localhost:1234/signUp\", {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await res.json();\n      if (result === \"signUp\") {\n        serErrorMassege(['성공적으로 가입되었습니다.', \"green\"]);\n      } else if (result === \"inputErr\") {\n        serErrorMassege(['현제 사용중인 이름입니다.', \"red\"]);\n      } else if (result === \"spaceErr\") {\n        serErrorMassege(['이름 또는 비밀번호에 띄어쓰기가 사용되면 안됩니다.', \"red\"]);\n      }\n    } catch (err) {\n      console.log(\"ERROR:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"center\",\n        children: massege\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            name: \"username\",\n            type: \"text\",\n            value: Username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            value: Password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            type: \"submit\",\n            onClick: login,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            id: \"nextUser\",\n            onClick: signUp,\n            children: \"\\uC2E0\\uADDC\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        style: {\n          color: errorMassege[1]\n        },\n        children: errorMassege[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s2(App, \"5xPJDUIhMjkfAA9IzpbCQbBbvuU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s2","_s","$RefreshSig$","Username","setUsername","Password","setPassword","Response","setResponse","errorMassege","serErrorMassege","massege","data","login","e","preventDefault","res","fetch","method","mode","headers","body","JSON","stringify","result","json","navigate","error","console","signUp","err","log","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","name","type","value","onChange","target","onClick","style","color","_c","$RefreshReg$"],"sources":["C:/Users/park0/Desktop/miniGamesProject/react-app/mgp-app/src/App.tsx"],"sourcesContent":["import { wait } from '@testing-library/user-event/dist/utils';\nimport React,{useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst App:React.FC = ()=>{\n  const [Username, setUsername] = useState('');\n  const [Password, setPassword] = useState('');\n  const [Response, setResponse] = useState(null);\n  const [errorMassege, serErrorMassege] = useState(['',\"red\"]);\n  let massege = \"< 로그인 >\"\n  const data = { Username, Password };\n\n  const login = async (e:any) => {\n    e.preventDefault();\n    try {\n      const res = await fetch('http://localhost:1234/Login', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {  \n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n      const result = await res.json();\n      if (result === \"NotUserData\"){\n        serErrorMassege([\"이름 또는 비밀번호가 잘못되었습니다.\",\"red\"])\n      } else {\n        const navigate = useNavigate();\n\n        navigate('/about');\n        serErrorMassege(['',\"red\"])\n      }\n      setResponse(result);\n      \n    } catch (error) {\n      console.error('ERROR:', error);\n    }\n  };\n\n  const signUp = async (e:any) => {\n    e.preventDefault();\n\n    try {\n      const res = await fetch(\"http://localhost:1234/signUp\", {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n      const result = await res.json();\n\n      if (result === \"signUp\"){\n        serErrorMassege(['성공적으로 가입되었습니다.',\"green\"])\n      } else if(result === \"inputErr\"){\n        serErrorMassege(['현제 사용중인 이름입니다.',\"red\"])\n      } else if(result === \"spaceErr\"){\n        serErrorMassege(['이름 또는 비밀번호에 띄어쓰기가 사용되면 안됩니다.',\"red\"])\n      }\n\n    } catch(err){\n      console.log(\"ERROR:\",err)\n    }\n  }\n  \n  return (\n    <>\n      <div id=\"container\">\n        <h1 id=\"center\">{massege}</h1>\n        <form>\n          <div className=\"form-group\">\n            <h2><label htmlFor=\"username\">Username:</label></h2>\n            <input\n              id=\"username\"\n              name=\"username\"\n              type=\"text\"\n              value={Username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n              <h2><label htmlFor=\"password\">Password:</label></h2>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              value={Password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <div className=\"button-group\">\n            <button className=\"button\" type=\"submit\" onClick={login}>로그인</button>\n            <button className=\"button\" id=\"nextUser\" onClick={signUp}>신규가입</button>\n          </div>\n        </form>\n        <div className='error' style={{color:errorMassege[1]}}>{errorMassege[0]}</div>\n      </div>\n    </>\n  )\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}