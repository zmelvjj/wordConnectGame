{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\park0\\\\Desktop\\\\miniGamesProject\\\\react-app\\\\mgp-app\\\\src\\\\Main.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [data, Setdata] = useState([\"\", 0]);\n  const mainData = async () => {\n    try {\n      const res = await fetch(\"http://localhost:1234/getData\", {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          request: \"getData\"\n        }) // JSON 형식으로 수정\n      });\n      const Data = await res.json();\n      const targetData = Data[Object.keys(Data)[0]];\n      Setdata([targetData.Username, targetData.Point]);\n      console.log(data);\n    } catch (err) {\n      console.log(\"ERROR:\", err);\n    }\n  };\n  useEffect(() => {\n    mainData();\n    console.log(\"Render\");\n  }, []); // 빈 배열을 두 번째 인자로 전달하여 컴포넌트가 마운트될 때 한 번만 실행되도록 함\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"center\",\n    children: data[0] + \"\\n\" + data[1]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"y89yYeqwgvvFEUKtx5ckDZChRoA=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Main","_s","data","Setdata","mainData","res","fetch","method","mode","headers","body","JSON","stringify","request","Data","json","targetData","Object","keys","Username","Point","console","log","err","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/park0/Desktop/miniGamesProject/react-app/mgp-app/src/Main.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Main: React.FC = () => {\r\n    const [data,Setdata] = useState([\"\",0]);\r\n\r\n    const mainData = async () => {\r\n        try {\r\n            const res = await fetch(\"http://localhost:1234/getData\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ request: \"getData\" }) // JSON 형식으로 수정\r\n            });\r\n\r\n            const Data = await res.json();\r\n            const targetData = Data[Object.keys(Data)[0]]\r\n            Setdata([targetData.Username,targetData.Point])\r\n            console.log(data)\r\n\r\n        } catch (err) {\r\n            console.log(\"ERROR:\", err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        mainData();\r\n        console.log(\"Render\")\r\n    }, []); // 빈 배열을 두 번째 인자로 전달하여 컴포넌트가 마운트될 때 한 번만 실행되도록 함\r\n\r\n    return (\r\n        <div id=\"center\">\r\n            {data[0]+\"\\n\"+data[1]}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;EAEvC,MAAMO,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAE;QAAU,CAAC,CAAC,CAAC;MACjD,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,CAAC;MAC7B,MAAMC,UAAU,GAAGF,IAAI,CAACG,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7CX,OAAO,CAAC,CAACa,UAAU,CAACG,QAAQ,EAACH,UAAU,CAACI,KAAK,CAAC,CAAC;MAC/CC,OAAO,CAACC,GAAG,CAACpB,IAAI,CAAC;IAErB,CAAC,CAAC,OAAOqB,GAAG,EAAE;MACVF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,GAAG,CAAC;IAC9B;EACJ,CAAC;EAED3B,SAAS,CAAC,MAAM;IACZQ,QAAQ,CAAC,CAAC;IACViB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIvB,OAAA;IAAKyB,EAAE,EAAC,QAAQ;IAAAC,QAAA,EACXvB,IAAI,CAAC,CAAC,CAAC,GAAC,IAAI,GAACA,IAAI,CAAC,CAAC;EAAC;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAlCID,IAAc;AAAA8B,EAAA,GAAd9B,IAAc;AAoCpB,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}