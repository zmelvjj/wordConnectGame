{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\park0\\\\Desktop\\\\minigameProject\\\\wordGames\\\\src\\\\MainInputUI.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainInputUI = () => {\n  _s();\n  const [word, setWord] = useState('');\n  const [exists, setExists] = useState(null);\n  const checkWordExistence = async () => {\n    const apiKey = '02423E4592ADEA654ADB100B20FDAAA6'; // 발급받은 API 키를 여기에 입력하세요\n    const response = await fetch(`https://stdict.korean.go.kr/api/search.do?key=${apiKey}&q=${word}&req_type=json`);\n    const data = await response.json();\n    if (data.channel && data.channel.item && data.channel.item.length > 0) {\n      setExists(true);\n    } else {\n      setExists(false);\n    }\n  };\n  const handleInputChange = e => {\n    setWord(e.target.value);\n  };\n  const handleCheck = () => {\n    checkWordExistence();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: word,\n      onChange: handleInputChange,\n      placeholder: \"\\uB2E8\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCheck,\n      children: \"\\uB2E8\\uC5B4 \\uC874\\uC7AC \\uC5EC\\uBD80 \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), exists !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: exists ? '단어가 존재합니다.' : '단어가 존재하지 않습니다.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MainInputUI, \"XwacWKFKCDmlV/c3GzPsecN0Vi4=\");\n_c = MainInputUI;\nexport default MainInputUI;\nvar _c;\n$RefreshReg$(_c, \"MainInputUI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MainInputUI","_s","word","setWord","exists","setExists","checkWordExistence","apiKey","response","fetch","data","json","channel","item","length","handleInputChange","e","target","value","handleCheck","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/park0/Desktop/minigameProject/wordGames/src/MainInputUI.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst MainInputUI: React.FC = () => {\n  const [word, setWord] = useState('');\n  const [exists, setExists] = useState<boolean | null>(null);\n\n  const checkWordExistence = async () => {\n    const apiKey = '02423E4592ADEA654ADB100B20FDAAA6'; // 발급받은 API 키를 여기에 입력하세요\n    const response = await fetch(`https://stdict.korean.go.kr/api/search.do?key=${apiKey}&q=${word}&req_type=json`);\n    const data = await response.json();\n\n    if (data.channel && data.channel.item && data.channel.item.length > 0) {\n      setExists(true);\n    } else {\n      setExists(false);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setWord(e.target.value);\n  };\n\n  const handleCheck = () => {\n    checkWordExistence();\n  };\n\n  return (\n    <div className='container'>\n      <input type=\"text\" value={word} onChange={handleInputChange} placeholder=\"단어를 입력하세요\" />\n      <button onClick={handleCheck}>단어 존재 여부 확인</button>\n      {exists !== null && (\n        <div>\n          {exists ? '단어가 존재합니다.' : '단어가 존재하지 않습니다.'}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MainInputUI;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAiB,IAAI,CAAC;EAE1D,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,MAAM,GAAG,kCAAkC,CAAC,CAAC;IACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiDF,MAAM,MAAML,IAAI,gBAAgB,CAAC;IAC/G,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACE,OAAO,CAACC,IAAI,IAAIH,IAAI,CAACE,OAAO,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MACrET,SAAS,CAAC,IAAI,CAAC;IACjB,CAAC,MAAM;MACLA,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC;EAED,MAAMU,iBAAiB,GAAIC,CAAsC,IAAK;IACpEb,OAAO,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBb,kBAAkB,CAAC,CAAC;EACtB,CAAC;EAED,oBACEP,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACJ,KAAK,EAAEhB,IAAK;MAACqB,QAAQ,EAAER,iBAAkB;MAACS,WAAW,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvF7B,OAAA;MAAQ8B,OAAO,EAAEV,WAAY;MAAAE,QAAA,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDxB,MAAM,KAAK,IAAI,iBACdL,OAAA;MAAAsB,QAAA,EACGjB,MAAM,GAAG,YAAY,GAAG;IAAgB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAnCID,WAAqB;AAAA8B,EAAA,GAArB9B,WAAqB;AAqC3B,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}