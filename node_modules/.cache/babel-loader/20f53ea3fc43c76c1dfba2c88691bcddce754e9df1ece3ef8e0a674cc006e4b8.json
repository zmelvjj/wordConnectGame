{"ast":null,"code":"'use strict';\n\nvar os = require('os');\nvar util = require('util');\nvar EventEmitter = require('events').EventEmitter;\nvar serviceName = require('multicast-dns-service-types');\nvar txt = require('dns-txt')();\nvar TLD = '.local';\nmodule.exports = Service;\nutil.inherits(Service, EventEmitter);\nfunction Service(opts) {\n  if (!opts.name) throw new Error('Required name not given');\n  if (!opts.type) throw new Error('Required type not given');\n  if (!opts.port) throw new Error('Required port not given');\n  this.name = opts.name;\n  this.protocol = opts.protocol || 'tcp';\n  this.type = serviceName.stringify(opts.type, this.protocol);\n  this.host = opts.host || os.hostname();\n  this.port = opts.port;\n  this.fqdn = this.name + '.' + this.type + TLD;\n  this.subtypes = opts.subtypes || null;\n  this.txt = opts.txt || null;\n  this.published = false;\n  this._activated = false; // indicates intent - true: starting/started, false: stopping/stopped\n}\nService.prototype._records = function () {\n  var records = [rr_ptr(this), rr_srv(this), rr_txt(this)];\n  var self = this;\n  var interfaces = os.networkInterfaces();\n  Object.keys(interfaces).forEach(function (name) {\n    interfaces[name].forEach(function (addr) {\n      if (addr.internal) return;\n      if (addr.family === 'IPv4') {\n        records.push(rr_a(self, addr.address));\n      } else {\n        records.push(rr_aaaa(self, addr.address));\n      }\n    });\n  });\n  return records;\n};\nfunction rr_ptr(service) {\n  return {\n    name: service.type + TLD,\n    type: 'PTR',\n    ttl: 28800,\n    data: service.fqdn\n  };\n}\nfunction rr_srv(service) {\n  return {\n    name: service.fqdn,\n    type: 'SRV',\n    ttl: 120,\n    data: {\n      port: service.port,\n      target: service.host\n    }\n  };\n}\nfunction rr_txt(service) {\n  return {\n    name: service.fqdn,\n    type: 'TXT',\n    ttl: 4500,\n    data: txt.encode(service.txt)\n  };\n}\nfunction rr_a(service, ip) {\n  return {\n    name: service.host,\n    type: 'A',\n    ttl: 120,\n    data: ip\n  };\n}\nfunction rr_aaaa(service, ip) {\n  return {\n    name: service.host,\n    type: 'AAAA',\n    ttl: 120,\n    data: ip\n  };\n}","map":{"version":3,"names":["os","require","util","EventEmitter","serviceName","txt","TLD","module","exports","Service","inherits","opts","name","Error","type","port","protocol","stringify","host","hostname","fqdn","subtypes","published","_activated","prototype","_records","records","rr_ptr","rr_srv","rr_txt","self","interfaces","networkInterfaces","Object","keys","forEach","addr","internal","family","push","rr_a","address","rr_aaaa","service","ttl","data","target","encode","ip"],"sources":["C:/Users/park0/Desktop/miniGamesProject/mgp-app/node_modules/bonjour/lib/service.js"],"sourcesContent":["'use strict'\n\nvar os = require('os')\nvar util = require('util')\nvar EventEmitter = require('events').EventEmitter\nvar serviceName = require('multicast-dns-service-types')\nvar txt = require('dns-txt')()\n\nvar TLD = '.local'\n\nmodule.exports = Service\n\nutil.inherits(Service, EventEmitter)\n\nfunction Service (opts) {\n  if (!opts.name) throw new Error('Required name not given')\n  if (!opts.type) throw new Error('Required type not given')\n  if (!opts.port) throw new Error('Required port not given')\n\n  this.name = opts.name\n  this.protocol = opts.protocol || 'tcp'\n  this.type = serviceName.stringify(opts.type, this.protocol)\n  this.host = opts.host || os.hostname()\n  this.port = opts.port\n  this.fqdn = this.name + '.' + this.type + TLD\n  this.subtypes = opts.subtypes || null\n  this.txt = opts.txt || null\n  this.published = false\n\n  this._activated = false // indicates intent - true: starting/started, false: stopping/stopped\n}\n\nService.prototype._records = function () {\n  var records = [rr_ptr(this), rr_srv(this), rr_txt(this)]\n\n  var self = this\n  var interfaces = os.networkInterfaces()\n  Object.keys(interfaces).forEach(function (name) {\n    interfaces[name].forEach(function (addr) {\n      if (addr.internal) return\n      if (addr.family === 'IPv4') {\n        records.push(rr_a(self, addr.address))\n      } else {\n        records.push(rr_aaaa(self, addr.address))\n      }\n    })\n  })\n\n  return records\n}\n\nfunction rr_ptr (service) {\n  return {\n    name: service.type + TLD,\n    type: 'PTR',\n    ttl: 28800,\n    data: service.fqdn\n  }\n}\n\nfunction rr_srv (service) {\n  return {\n    name: service.fqdn,\n    type: 'SRV',\n    ttl: 120,\n    data: {\n      port: service.port,\n      target: service.host\n    }\n  }\n}\n\nfunction rr_txt (service) {\n  return {\n    name: service.fqdn,\n    type: 'TXT',\n    ttl: 4500,\n    data: txt.encode(service.txt)\n  }\n}\n\nfunction rr_a (service, ip) {\n  return {\n    name: service.host,\n    type: 'A',\n    ttl: 120,\n    data: ip\n  }\n}\n\nfunction rr_aaaa (service, ip) {\n  return {\n    name: service.host,\n    type: 'AAAA',\n    ttl: 120,\n    data: ip\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}