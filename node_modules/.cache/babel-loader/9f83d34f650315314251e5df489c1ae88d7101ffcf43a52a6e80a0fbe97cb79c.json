{"ast":null,"code":"import axios from \"axios\";\nexport const findServerInNetwork = async () => {\n  const ipPart = window.location.hostname.split(\".\");\n  const ipTool = `http://${ipPart[0]}.${ipPart[1]}.${ipPart[2]}`;\n  console.log(\"asdawdwa\");\n  for (let i = 1; i < 255; i++) {\n    const testIP = `${ipTool}.${i}:1234`;\n    axios.get(testIP).then(response => {\n      if (response.status === 200) {\n        console.log(`Find Server IP!`);\n        fetch(testIP + '/test', {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: testIP\n        });\n        return testIP; // 서버의 IP를 반환\n      }\n    }).catch(err => {});\n  }\n  console.log(\"Server not found.  :C\");\n  return null;\n};","map":{"version":3,"names":["axios","findServerInNetwork","ipPart","window","location","hostname","split","ipTool","console","log","i","testIP","get","then","response","status","fetch","method","mode","headers","body","catch","err"],"sources":["C:/Users/park0/Desktop/miniGamesProject/mgp-app/src/findServerIP.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const findServerInNetwork = async () => {\r\n    const ipPart = window.location.hostname.split(\".\");\r\n    const ipTool = `http://${ipPart[0]}.${ipPart[1]}.${ipPart[2]}`;\r\n    console.log(\"asdawdwa\")\r\n    for(let i = 1; i < 255; i++){\r\n        const testIP = `${ipTool}.${i}:1234`;\r\n\r\n        axios.get(testIP).then((response) => {\r\n            if (response.status === 200) {\r\n                console.log(`Find Server IP!`);\r\n\r\n                fetch(testIP+'/test', {\r\n                    method:\"POST\",\r\n                    mode:\"cors\",\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: testIP\r\n                })\r\n                return testIP; // 서버의 IP를 반환\r\n            }\r\n        }).catch((err) => {\r\n            \r\n        })\r\n    }\r\n    console.log(\"Server not found.  :C\")\r\n    return null;\r\n} "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMC,MAAM,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;EAClD,MAAMC,MAAM,GAAG,UAAUL,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,EAAE;EAC9DM,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACvB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAC;IACxB,MAAMC,MAAM,GAAG,GAAGJ,MAAM,IAAIG,CAAC,OAAO;IAEpCV,KAAK,CAACY,GAAG,CAACD,MAAM,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MACjC,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBP,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAE9BO,KAAK,CAACL,MAAM,GAAC,OAAO,EAAE;UAClBM,MAAM,EAAC,MAAM;UACbC,IAAI,EAAC,MAAM;UACXC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAET;QACV,CAAC,CAAC;QACF,OAAOA,MAAM,CAAC,CAAC;MACnB;IACJ,CAAC,CAAC,CAACU,KAAK,CAAEC,GAAG,IAAK,CAElB,CAAC,CAAC;EACN;EACAd,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpC,OAAO,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}